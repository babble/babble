<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="WebTest">
    <description>
        <![CDATA[
DEPRECATED since November 2007: use webtest.xml instead of this file!

		This file provides following elements to use in your test scripts:

		- all webtest's steps loaded and ready to use,
		- the xsl transformation to get an html report
		- a target to open the html report in your browser when test is completed

		Usage:
		<import file="${webtest.home}/lib/useWebTest.xml"/>

		Following entries must be set before using one of the targets:
		- webtest.resultpath
		- webtest.resultfile
		- webtest.resultfile.html
		]]>
    </description>

	<echo message="DEPRECATED since November 2007: use webtest.xml instead of lib/useWebTest.xml!" level="warning"/>

    <dirname property="ant.dir.WebTest" file="${ant.file.WebTest}" />

    <import file="${ant.dir.WebTest}/classpath.xml"/>

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <target name="full" depends="defineTasks"
            description="Run all tests with reporting">

        <mkdir dir="${webtest.resultpath}"/>
        <antcall target="rotateResults" description="Makes a backup of the previous results"/>
        <antcall target="deleteReports"/>
        <antcall target="testInWork"/>
        <antcall target="style"/>
        <antcall target="openResultFile"/>
    </target>

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <target name="deleteReports" unless="skip.deleteReports"
            description="deletes the reports generated by the previous run. Can be skipped setting property 'skip.deleteReports' to have results added to last report">
        <delete quiet="true">
            <fileset dir="${webtest.resultpath}" excludes="resources/"/>
        </delete>
    </target>

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <target name="testInWork"
            description="Runs the test file specified in property testInWork. Overwrite to run an other way">

        <dirname property="testInWork.dir" file="${testInWork}"/>
        <!-- give the possibility to specify the testInWork with and without the .xml extension -->
        <available file="${testInWork}" property="suffix" value=""/>
        <property name="suffix" value=".xml"/>
        <basename property="testInWork.file" file="${testInWork}${suffix}"/>

        <echo message="Execution ${testInWork.file} in dir ${testInWork.dir}"/>
        <ant dir="${testInWork.dir}" antfile="${testInWork.file}" inheritRefs="true"/>
    </target>

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <target name="defineTasks" description="defines the WebTest tasks">
        <taskdef resource="webtest.taskdef"
                 loaderref="webtest.loader"
                 classpathref="webtest.path.id"
                />

        <!-- the standard Ant Groovy task -->
        <taskdef name="groovyScript" classname="org.codehaus.groovy.ant.Groovy"
                 loaderref="webtest.loader"
                 classpathref="webtest.path.id"
                />
    </target>

	<target name="guessResultFile" unless="webtest.resultfile.html">
		<basename property="webtest.reportfile" file="${webtest.resultfile}" suffix=".xml"/>
		<property name="webtest.resultfile.html" value="${webtest.reportfile}.html"/>
	</target>

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <target name="style" depends="guessResultFile" description="generates the html report from the xml">
        <tstamp>
            <format property="report.time" pattern="dd.MM.yyyy HH:mm" locale="de"/>
        </tstamp>

        <property name="webtest.resources.dir" value="${ant.dir.WebTest}/../resources"/>
        <property name="webtest.style.title" value="Canoo WebTest Reporting"/>
        <property name="webtest.style.singleReportsMode" value="embedded"/>
        <property name="webtest.outputdir" location="${webtest.resultpath}"/>
        <property name="webtest.style.xsl" location="${webtest.resources.dir}/WebTestReport.xsl"/>

        <style
                in="${webtest.resultpath}/${webtest.resultfile}"
                out="${webtest.resultpath}/${webtest.resultfile.html}"
                style="${webtest.style.xsl}"
                >
            <param name="reporttime" expression="${report.time}"/>
            <param name="outputDir" expression="${webtest.outputdir}"/>
            <param name="resources.dir" expression="resources"/>
            <param name="title" expression="${webtest.style.title}"/>
            <param name="singleReportsMode" expression="${webtest.style.singleReportsMode}"/>
            <!-- 'external' or 'embedded' -->
            <param name="indexTests" expression="${webtest.resultfile.html}"/>
        </style>

        <mkdir dir="${webtest.resultpath}/resources"/>
        <copy todir="${webtest.resultpath}/resources">
            <fileset dir="${ant.dir.WebTest}/../resources/" />
        </copy>
    </target>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <target name="openResultFile" depends="guessResultFile" unless="skip.openResultFile"
            description="Opens the html result file in the browser">
        <dirname property="absoluteDirPath" file="${webtest.resultpath}/foo"/>
        <echo message="Opening ${absoluteDirPath}/${webtest.resultfile.html}"/>
        <exec executable="cmd" spawn="true" os="Windows XP">
            <arg value="/c"/>
            <arg file="${absoluteDirPath}/${webtest.resultfile.html}"/>
        </exec>
        <exec executable="/usr/bin/open" spawn="true" os="Mac OS X">
            <arg file="${absoluteDirPath}/${webtest.resultfile.html}"/>
        </exec>
    </target>

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <target name="rotateResults" if="rotateResults"
            description="makes a backup of the previous results">
        <property name="rotateResults.nbRotations" value="10" description="the number of backups that will be made"/>
        <property name="rotateResults.backupdir" value="${webtest.resultpath}_backup"
                  description="the directory in which the rotated results will be placed"/>
        <echo message="Backuping last results to ${rotateResults.backupdir} (with ${rotateResults.nbRotations} rotations)"/>

        <groovyScript description="backup and rotates the results">
            def nbRotations = project.properties['rotateResults.nbRotations'].toInteger()
            def backupDir = new File(project.properties['rotateResults.backupdir'])

            def ant = new AntBuilder(project)
            ant.delete(dir: new File(backupDir, nbRotations.toString()))

            (nbRotations-1..1).each{ i ->
                def srcFolder = new File(backupDir, i.toString())
                if (srcFolder.exists()) {
                    srcFolder.renameTo(new File(backupDir, (i+1).toString()))
                }
            }
        </groovyScript>
        <echo message="backuping last results"/>
        <copy todir="${rotateResults.backupdir}/1">
            <fileset dir="${webtest.resultpath}"/>
        </copy>
    </target>

</project>