#!/usr/bin/env ./bin/jssh

/**
 *   Utility to upload files to the GridFS filesystem
 *
 *  usage :  dbURL  file[:alias]*  [ file[:alias]* ...]
 *
 *  where : 
 *           dbURL : database to insert file(s) into.  Composed as [host/]database, where 
 *                   optional host defaults to localhost
 *
 *           file[:alias]* : file to upload, with one or more optional aliases
 */
 
function _usage(){
    print( "usage :  dbURL  file[:alias]*  [ file[:alias]* ...]" );    
    print( "where :");
    print( "         dbURL : database to insert file(s) into.  Composed as [host/]database, where");
    print( "                 optional host defaults to localhost");
    print( "");
    print( "         file[:alias]* : file to upload, with one or more optional aliases");
    print("");
    print("  example : uploadfile  localhost/admin   myfile.tgz:stable.tgz:foo");
}

if (arguments.length < 2){
    _usage();
    return -1;
}


//
// these are required arguments : hostname, database and a file
//
dbURL = arguments.shift();

//
// make connection to db.  This is 'lazy' - nothing really will happen until it's needed.
//
var db = connect(dbURL);

//
// now every argument left in the args array should be a file:alias element, so just
// iterate over them and process one at a time
//

var track = false;

arguments.forEach(function(fna) {

    if (fna == "--track") {
        track = true;
        return;
    }

    var arr = fna.split(":");    
    var filename = arr.shift();
       
    //
    //  open the local file.  the openFile() function is one found only in the shell - it is not 
    //  available in the appserver environment as you don't really know what machine you're running
    //  on
    //
    var f = openFile(filename);
    
    //
    // now if the file exists, add any aliases that were specified (they're like tags), and
    // save the file to the database
    //
    if (f.exists()) {
        print("Uploading file : " + filename);
        arr.forEach(function(alias) { 
            print("   adding alias : " + alias);
            f.addAlias(alias);
        });
        
        if ( track ){
            f.track = track;
            f.downloads = 0;
        }
        
        db._files.save(f);
        print("Uploaded file " + filename + " id=" + f._id);
    }    
    else {
        print(file + ": No such file");
    }
});
