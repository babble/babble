/**
*    Copyright (C) 2008 10gen Inc.
*  
*    This program is free software: you can redistribute it and/or  modify
*    it under the terms of the GNU Affero General Public License, version 3,
*    as published by the Free Software Foundation.
*  
*    This program is distributed in the hope that it will be useful,
*    but WITHOUT ANY WARRANTY; without even the implied warranty of
*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*    GNU Affero General Public License for more details.
*  
*    You should have received a copy of the GNU Affero General Public License
*    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/* Generated By:JJTree: Do not edit this line. Node.java Version 4.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=MQL,NODE_EXTENDS=,NODE_FACTORY= */
package ed.db.mql;

/* All AST nodes must implement this interface.  It provides basic
   machinery for constructing the parent and child relationships
   between nodes. */

public interface Node {

    /**
     * This method is called after the node has been made the current
     * node.  It indicates that child nodes can now be added to it.
     */
    public void jjtOpen();

    /**
     * This method is called after all the child nodes have been
     * added.
     */
    public void jjtClose();

    /**
     * This pair of methods are used to inform the node of its
     * parent.
     */
    public void jjtSetParent(Node n);

    public Node jjtGetParent();

    /**
     * This method tells the node to add its argument to the node's
     * list of children.
     */
    public void jjtAddChild(Node n, int i);

    /**
     * This method returns a child node.  The children are numbered
     * from zero, left to right.
     */
    public Node jjtGetChild(int i);

    /**
     * Return the number of children the node has.
     */
    public int jjtGetNumChildren();
}
/* JavaCC - OriginalChecksum=74ed187f28aef6b7ce6c5c5a5fb96c9e (do not edit this line) */
